@model PaginatedList<TaskViewModel>

@{
    ViewData["Title"] = "Index";
}

<h1>TASK</h1>

<p>
    <a asp-action="Create" class="btn btn-primary btn-sm">
        <i class="fas fa-plus"></i> Create New
    </a>
</p>

<form asp-action="Index">
    <div class="d-flex">
        <input class="form-control" placeholder="Search..." value="@ViewData["CurrentFilter"]" type="text"
            autocomplete="off" name="SearchString" />
    </div>
</form>

<div class="table-responsive">
    <table class="table" style="table-layout: fixed; width: 100%;">
        <thead>
            <tr>
                <th>
                    <a asp-action="Index" asp-route-sortOrder="@ViewData["NameSortParm"]"
                        asp-route-currentFilter="@ViewData["CurrentFilter"]" class="btn btn-light btn-sm">
                        Task Name
                    </a>
                </th>
                <th>
                    <a asp-action="Index" asp-route-sortOrder="@ViewData["TopicSortParm"]"
                        asp-route-currentFilter="@ViewData["CurrentFilter"]" class="btn btn-light btn-sm">
                        @Html.DisplayNameFor(model => model[0].Topic)
                    </a>
                </th>
                <th>
                    <a asp-action="Index" asp-route-sortOrder="@ViewData["DescriptionSortParm"]"
                        asp-route-currentFilter="@ViewData["CurrentFilter"]" class="btn btn-light btn-sm">
                        @Html.DisplayNameFor(model => model[0].Description)
                    </a>
                </th>
                <th>
                    <a asp-action="Index" asp-route-sortOrder="@ViewData["StartDateSortParm"]"
                        asp-route-currentFilter="@ViewData["CurrentFilter"]" class="btn btn-light btn-sm">
                        @Html.DisplayNameFor(model => model[0].StartTime)
                    </a>
                </th>
                <th>
                    <a asp-action="Index" asp-route-sortOrder="@ViewData["EndDateSortParm"]"
                        asp-route-currentFilter="@ViewData["CurrentFilter"]" class="btn btn-light btn-sm">
                        @Html.DisplayNameFor(model => model[0].EndTime)
                    </a>
                </th>
                <th>
                    <a asp-action="Index" asp-route-sortOrder="@ViewData["StatusSortParm"]"
                        asp-route-currentFilter="@ViewData["CurrentFilter"]" class="btn btn-light btn-sm">
                        @Html.DisplayNameFor(model => model[0].Status)
                    </a>
                </th>
                <th style="color: black;">
                    Actions
                </th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td style="color: black;">
                        @Html.DisplayFor(modelItem => item.Task_Name)
                    </td>
                    <td style="color: black;">
                        @Html.DisplayFor(modelItem => item.Topic)
                    </td>
                    <td style="color: black;">
                        @Html.DisplayFor(modelItem => item.Description)
                    </td>
                    <td style="color: black;">
                        @Html.DisplayFor(modelItem => item.StartTime)
                    </td>
                    <td style="color: black;">
                        @Html.DisplayFor(modelItem => item.EndTime)
                    </td>
                    <td style="color: black;">
                        @Html.DisplayFor(modelItem => item.Status)
                    </td>

                    <td class="text-nowrap">
                        <div class="d-flex gap-2">
                            <a asp-action="Edit" asp-route-id="@item.Task_Id" class="btn btn-success btn-sm">Edit</a> |
                            <a asp-action="Details" asp-route-id="@item.Task_Id" class="btn btn-info btn-sm">Details</a> |
                            <a asp-action="Delete" asp-route-id="@item.Task_Id" class="btn btn-danger btn-sm">Delete</a>
                        </div>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>

@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}

<!-- Pagination Buttons -->
<div class="d-flex justify-content-between align-items-center mt-4">
    <div>
        <a asp-action="Index" asp-route-sortOrder="@ViewData["CurrentSort"]"
            asp-route-pageNumber="@(Model.PageIndex - 1)" asp-route-currentFilter="@ViewData["CurrentFilter"]"
            class="btn btn-outline-secondary @(!Model.HasPreviousPage ? "disabled" : "")">
            Previous
        </a>
    </div>

    <!-- Display current page -->
    <div class="text-center">
        Page @Model.PageIndex of @Model.TotalPages
    </div>

    <div>
        <a asp-action="Index" asp-route-sortOrder="@ViewData["CurrentSort"]"
            asp-route-pageNumber="@(Model.PageIndex + 1)" asp-route-currentFilter="@ViewData["CurrentFilter"]"
            class="btn btn-outline-secondary @(!Model.HasNextPage ? "disabled" : "")">
            Next
        </a>
    </div>
</div>
