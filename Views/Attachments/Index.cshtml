@model PaginatedList<AttachmentViewModel>

@{
    ViewData["Title"] = "Index";
}

<h1>ATTACHMENTS</h1>

<p>
    <a asp-action="Create" class="btn btn-primary btn-sm">
        <i class="fas fa-plus"></i> Create New
    </a>
</p>

<form asp-action="Index" class="mb-4">
    <div class="card shadow p-4">
        <div class="row g-3 align-items-center">
            <!-- Search Box -->
            <div class="col-md-6">
                <input id="searchBox" class="form-control" placeholder="Search..." value="@ViewData["CurrentFilter"]"
                    type="text" autocomplete="off" name="SearchString" />
            </div>
            <!-- Task Filter Dropdown -->
            <div class="col-md-4">
                <select id="taskFilter" name="taskId" class="form-select" asp-items="ViewBag.TaskId">
                    <option value="">-- Select Task --</option>
                </select>
            </div>
            <!-- Submit Button -->
            <div class="col-md-2 d-grid">
                <label class="form-label d-none">Filter</label>
                <button type="submit" class="btn btn-primary">Filter</button>
            </div>
        </div>
    </div>
</form>

<table class="table">
    <thead>
        <tr> 
            <th>
                @Html.DisplayNameFor(model => model[0].File)
                </a>
            </th>
            <th>
                @Html.DisplayNameFor(model => model[0].Image)
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["DescriptionSortParm"]"
                    asp-route-currentFilter="@ViewData["CurrentFilter"]" class="btn btn-light btn-sm">
                    @Html.DisplayNameFor(model => model[0].Description)
                </a>
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["DateSortParm"]"
                    asp-route-currentFilter="@ViewData["CurrentFilter"]" class="btn btn-light btn-sm">
                @Html.DisplayNameFor(model => model[0].Time_Create_Tep)
                </a>
            </th>
            <th>
                Actions
            </th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @if (!string.IsNullOrEmpty(item.File))
                {
                        <a href="@item.File" download>
                        @if (item.File.EndsWith(".pdf"))
                        {
                                    <img src="../assets/images/icons/pdf-icon.png" width="80" />
                        }
                        else if (item.File.EndsWith(".doc") || item.File.EndsWith(".docx"))
                        {
                                    <img src="../assets/images/icons/docx-icon.png" width="80" />
                        }
                        else if (item.File.EndsWith(".xls") || item.File.EndsWith(".xlsx"))
                        {
                                    <img src="../assets/images/icons/xlsx-icon.png" width="80" />
                        }
                        else if (item.File.EndsWith(".txt") || item.File.EndsWith("."))
                        {
                                    <img src="../assets/images/icons/txt-icon.png" width="80" />
                        }
                        else
                        {
                                    <img src="../assets/images/icons/default-icon.png" width="80" />
                        }
                        </a>
                }
            </td>
            <td>
                @if (!string.IsNullOrEmpty(item.Image))
                {
                    <a href="@item.Image" download>
                    <img src="@item.Image" width="150" />
                    </a>
                }
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Description)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Time_Create_Tep)
            </td>

                <td class="text-nowrap">
                    <div class="d-flex gap-2">
                        <a asp-action="Edit" asp-route-id="@item.Attachments_Id" class="btn btn-success btn-sm">Edit</a> |
                        <a asp-action="Details" asp-route-id="@item.Attachments_Id" class="btn btn-info btn-sm">Details</a> |
                        <a asp-action="Delete" asp-route-id="@item.Attachments_Id" class="btn btn-danger btn-sm">Delete</a>
                    </div>
                </td>
        </tr>
}
    </tbody>
</table>

@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}

<!-- Pagination Buttons -->
<div class="d-flex justify-content-between mt-4">
    <a asp-action="Index" asp-route-sortOrder="@ViewData["CurrentSort"]" asp-route-pageNumber="@(Model.PageIndex - 1)"
        asp-route-currentFilter="@ViewData["CurrentFilter"]"
        class="btn btn-outline-secondary @(!Model.HasPreviousPage ? "disabled" : "")">
        Previous
    </a>
    <a asp-action="Index" asp-route-sortOrder="@ViewData["CurrentSort"]" asp-route-pageNumber="@(Model.PageIndex + 1)"
        asp-route-currentFilter="@ViewData["CurrentFilter"]"
        class="btn btn-outline-secondary @(!Model.HasNextPage ? "disabled" : "")">
        Next
    </a>
</div>
